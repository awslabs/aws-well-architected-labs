AWSTemplateFormatVersion: 2010-09-09
Description: 'This deployment includes SSM, CloudWatch, and allows instance reboot'
Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    Description: 'Use an AMI of your choosing, we recommend to use the latest available'
Resources:
  DBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open database for access
      VpcId: '{{resolve:ssm:/deployer/backupandrestore-secondary/default-vpc:1}}'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Open App access
      VpcId: '{{resolve:ssm:/deployer/backupandrestore-secondary/default-vpc:1}}'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  EC2SecurityGroupDBRule:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref EC2SecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      DestinationSecurityGroupId: !Ref DBSecurityGroup
  InstanceLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      RetentionInDays: 7
  S3InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref S3Role
  S3Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-${AWS::Region}'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - 'arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy'
      Path: /
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    DeletionPolicy: Delete
    Properties:
      DBName: unishop
      DBInstanceIdentifier: !Ref 'AWS::StackName'
      Engine: MySQL
      DBInstanceClass: db.t3.micro
      Port: '3306'
      MasterUsername: UniShopAppV1User
      MasterUserPassword: UniShopAppV1Password
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      AllocatedStorage: '5'
      MultiAZ: 'false'
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn: DBInstance
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT30M
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          default:
            - update
            - install
            - configure
            - create-tables
        update:
          commands:
            update:
              command: sudo yum update -y
        install:
          packages:
            rpm:
              'https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm': []
            yum:
              amazon-cloudwatch-agent: []
              java-1.8.0-openjdk-devel: []
              mariadb: []
        configure:
          commands:
            0-populate-buckets:
              command: !Join
                - ''
                - - |
                    #!/bin/bash
                  - |
                    sudo aws s3 cp s3://ee-assets-prod-us-east-1/modules/630039b9022d4b46bb6cbad2e3899733/v1/create_tables.sql /home/ec2-user/ --no-sign-request
        create-tables:
          commands:
            1-create-tables:
              command: !Join
                - ''
                - - 'sudo mysql -u UniShopAppV1User -h '
                  - !GetAtt
                    - DBInstance
                    - Endpoint.Address
                  - |2
                     -P 3306 -pUniShopAppV1Password < /home/ec2-user/create_tables.sql
    Properties:
      InstanceType: t3.small
      ImageId: !Ref LatestAmiId
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      IamInstanceProfile: !Ref S3InstanceProfile
      UserData: !Base64
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              sudo yum install -y aws-cfn-bootstrap
            - /opt/aws/bin/cfn-init -v
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource EC2Instance '
            - '         --region '
            - !Ref 'AWS::Region'
            - '         --configsets default'
            - |+

            - /opt/aws/bin/cfn-signal -e $?
            - ' --stack '
            - !Ref 'AWS::StackName'
            - ' --resource EC2Instance'
            - ' --region '
            - !Ref 'AWS::Region'
            - |+

      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
